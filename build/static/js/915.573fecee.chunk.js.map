{"version":3,"file":"static/js/915.573fecee.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/@nextui-org/dom-animation/dist/index.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs"],"sourcesContent":["import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing, statsBuffer, activeAnimations } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.5.0\", `Attempting to mix Motion versions ${nextValue.version} with 12.5.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","\"use client\";\n\n// src/index.ts\nimport { domAnimation } from \"framer-motion\";\nvar src_default = domAnimation;\nexport {\n  src_default as default\n};\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n"],"names":["resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","positionalKeys","Set","transformPropOrder","setMotionValue","key","value","hasValue","getValue","set","addValue","motionValue","addValueToWillChange","willChange","Boolean","isMotionValue","add","getOptimisedAppearId","optimizedAppearDataAttribute","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","Math","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","v","test","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","alpha","match","parseFloat","rgbUnit","number","transform","clamp","clampRgbUnit","rgba","parse","_ref","red","green","blue","alpha$1","hex","r","g","length","substring","parseInt","hsla","hue","saturation","lightness","percent","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","split","replace","parsedValue","push","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_a","_b","isNaN","getAnimatableNone","parsed","transformer","map","maxDefaults","applyDefaultFilter","name","slice","unit","defaultValue","has","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","scale","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","px","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","max","min","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","Array","from","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","forEach","removedTransforms","get","removeNonTranslationalTransform","render","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","isAsync","arguments","this","isComplete","scheduleResolve","frame","read","resolveKeyframes","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","delete","cancel","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","current","depth","invariant","token","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","isCSSVariableToken","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isArray","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","index","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","time","now","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","velocity","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","allowFlatten","ease","Promise","mixNumber","to","progress","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","reduce","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","state","done","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","generator","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calcGeneratorDuration","maxGeneratorDuration","generateLinearEasing","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","easingDefinitionToFunction","isBezierDefinition","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","update","passTimestamp","timestamp","start","stop","cancelFrame","frameData","isProcessing","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","activeAnimations","mainThread","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","memo","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","supportsLinearEasing","isWaapiSupportedEasing","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","mapEasingToNativeEasing","statsBuffer","waapi","animate","iterations","direction","finished","finally","startWaapiAnimation","pendingTimeline","attachTimeline","onfinish","playbackRate","playState","timeline","sampleTime","setWithVelocity","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","GroupPlaybackControls","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolveFinalValueInKeyframes","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","shallowCompare","prev","prevLength","numVariantProps","variantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","extractEventInfo","event","point","pageX","pageY","handleHoverEvent","lifecycle","callback","postRender","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","press","_element","startEvent","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","instance","transformPoint","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","createBox","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","children","isVariantNode","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","remove","feature","valueIsTransform","onBindTransform","removeOnChange","on","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","SubscriptionManager","args","DOMVisualElement","compareDocumentPosition","vars","childSubscription","textContent","HTMLVisualElement","renderHTML","readTransformValue","computedStyle","isCSSVariableName","buildHTMLStyles","SVGVisualElement","isSVGTag","updateDimensions","dimensions","updateSVGDimensions","defaultType","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","styleProp","renderSVG","tagName","src_default","renderer","createDomVisualElement","Component","isSVGComponent","allowProjection","Fragment"],"sourceRoot":""}